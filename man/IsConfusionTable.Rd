% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IsConfusionTable.R
\name{IsConfusionTable}
\alias{IsConfusionTable}
\title{Detect whether an object looks like a confusion/coincidence matrix}
\usage{
IsConfusionTable(
  x,
  require_dimnames = TRUE,
  require_same_levels = TRUE,
  integer_tol = sqrt(.Machine$double.eps),
  accept_proportions = TRUE,
  require_square = TRUE
)
}
\arguments{
\item{x}{Object to check (typically a \code{table}, \code{matrix}, or
numeric \code{data.frame}).}

\item{require_dimnames}{Logical; if \code{TRUE}, both row and column names
must be present. Defaults to \code{TRUE}.}

\item{require_same_levels}{Logical; if \code{TRUE} and dimnames are present,
row and column names must be the same set (order ignored). Defaults to \code{TRUE}.}

\item{integer_tol}{Numeric tolerance for "integer-like" counts. Defaults to
\code{sqrt(.Machine$double.eps)}.}

\item{accept_proportions}{Logical; if \code{TRUE}, also accepts proportion
tables (all entries in [0,1] and total sum approx. 1). Defaults to \code{TRUE}.}

\item{require_square}{Logical; require a square table. Defaults to \code{TRUE}.}
}
\value{
\code{TRUE} if \code{x} looks like a confusion/coincidence matrix,
otherwise \code{FALSE}.
}
\description{
Checks if \code{x} behaves like a rater-by-rater contingency table:
square 2D numeric counts (or, optionally, proportions), non-negative,
finite, and (optionally) with matching row/column names.
}
\examples{
tab <- table(sample(letters[1:3], 100, TRUE),
             sample(letters[1:3], 100, TRUE))
IsConfusionTable(tab)               # TRUE

M <- as.matrix(tab)
IsConfusionTable(M)                 # TRUE (dimnames present)
IsConfusionTable(M, require_dimnames = FALSE)  # TRUE even without names

df <- as.data.frame.matrix(tab)
IsConfusionTable(df)                # TRUE (numeric data.frame)

# Two-column raw ratings are NOT a confusion table:
ratings <- cbind(r1 = sample(0:1, 50, TRUE), r2 = sample(0:1, 50, TRUE))
IsConfusionTable(ratings)           # FALSE (not square)

}
